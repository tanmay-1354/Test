name: Clone, Zip, Transfer, and Deploy Repository

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  ansible-deploy:
    runs-on: 
      - self-hosted  # Use self-hosted runner
      - Linux
      - X64  # Match the labels of your runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install zip and SSH utilities (if not installed)
      - name: Install required utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y zip ssh

      # Step 3: Delete the old zip file if it exists
      - name: Delete old zip file (if exists)
        run: |
          OLD_ZIP=$(ls /home/ubuntu/git/unidq_*.zip | head -n 1)
          if [ -f "$OLD_ZIP" ]; then
            echo "Deleting old zip file: $OLD_ZIP"
            rm "$OLD_ZIP"
          fi

      # Step 4: Generate a unique timestamp and zip the repository
      - name: Zip the repository with a unique name
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          ZIP_NAME="unidq_$TIMESTAMP.zip"
          zip -r /home/ubuntu/git/$ZIP_NAME .

      # Step 5: Clean the target directory on the remote server
      - name: Clean remote directory
        env:
          REMOTE_IP: ${{ secrets.REMOTE_SERVER_IP }}
          PRIVATE_KEY: ${{ secrets.REMOTE_SERVER_KEY }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem ubuntu@$REMOTE_IP "rm -rf /home/ubuntu/gitzip/*"
          rm private_key.pem

      # Step 6: Transfer the new zip file to the remote server
      - name: Transfer zip file to remote server
        env:
          REMOTE_IP: ${{ secrets.REMOTE_SERVER_IP }}
          PRIVATE_KEY: ${{ secrets.REMOTE_SERVER_KEY }}
        run: |
          ZIP_FILE=$(ls /home/ubuntu/git/unidq_*.zip | head -n 1)
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem "$ZIP_FILE" ubuntu@$REMOTE_IP:/home/ubuntu/gitzip
          rm private_key.pem

      # Step 7: Clear and Unzip the file in /var/www/html on the remote server
      - name: Deploy and unzip on remote server
        env:
          REMOTE_IP: ${{ secrets.REMOTE_SERVER_IP }}
          PRIVATE_KEY: ${{ secrets.REMOTE_SERVER_KEY }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          # Clear /var/www/html
          ssh -i private_key.pem ubuntu@$REMOTE_IP "sudo rm -rf /var/www/html/*"

          # Unzip the file into /var/www/html
          ssh -i private_key.pem ubuntu@$REMOTE_IP "
            ZIP_FILE=\$(ls /home/ubuntu/gitzip/unidq_*.zip | head -n 1);
            sudo unzip -o \$ZIP_FILE -d /var/www/html
          "

          rm private_key.pem
